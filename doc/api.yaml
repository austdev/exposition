# This is the server side API as of Exposition v0.3 / v0.4, previously written in PHP
#
# TODO:
# At the moment the HTML documentation is generated by "hand" by going to http://editor.swagger.io/
# and exporting the generated HTML... I could not find a simple npm package to do it, and compiling 
# Swagger-codegen requires Java and Maven. Overkill
#


swagger: '2.0'
info:
  title: Exposition API
  description: Describe the API used by the HTML5/JavaScript to access images and album resources.
  version: "0.5"
schemes:
  - https
  - http
basePath: /api

paths:
  /config:
    get:
      operationId: Config
      summary: Read main configuration
      produces: 
        - application/json
      responses:
        200:
          description: WebSite configuration
          schema:
            $ref: '#/definitions/Configuration'
        500:
          description: Internal Error
          
  /download/{path}:
    get:
      operationId: Download
      produces: 
        - application/zip
          application/octet-stream
      parameters:
        - name: path
          in: path
          description: Path of the Photo or Album to download
          required: true
          type: string
          format: path
      responses:
        200:
          description: A zip archive containing all the albums and photos
        500:
          description: Any Error
  
  
  /item/{path}:
    get:
      operationId: Item
      produces: 
        - application/json
      parameters:
        - name: path
          in: path
          description: Path of the album item
          required: true
          type: string
          format: path
      responses:
        200:
          description: The album item
          schema:
            $ref: '#/definitions/Item'
        500:
          description: Any Error  
  
  /image/{size}/{path}:
    get:
      operationId: Image
      produces:
        - image/jpeg
      parameters:
        - name: size
          in: path
          description: Size of the image. 0 means 'full size'
          required: true
          type: number
          format: int32
          minimum: 0
        - name: path
          in: path
          description: Path of the photo to download. This must be the path of a 'photo' item not an 'album'
          required: true
          type: string
          format: path

      responses:
        200:
          description: The image representing a photo item
        500:
          description: Any Error  
  

definitions:

  Configuration:
    type: object
    properties:
      version:
        type: string
        description: Currently fixed to '0.5'
      info:
        type: string
        description: Currently fixed to 'Exposition 0.5 beta. (c) 2013-2016 Aymeric Barthe.'
      gallery_name:
        type: string
        description: Name of the Gallery. User facing
      photo_sizes:
        type: array
        description: Sizes of photos. Positive integers only. '0' means original size.
        items:
          type: number
          format: int32
          minimum: 0
        minItems: 1
        uniqueItems: true
      thumbnail_sizes:
        type: array
        description: Sizes of thumbnails. Positive integers only. '0' means original size.
        items:
          type: number
          format: int32
          minimum: 0
        minItems: 1
        uniqueItems: true
      is_download_allowed:
        type: boolean
        description: Whether the user should be allowed to download photos.
    required: 
      - version
      - info
      - gallery_name
      - photo_sizes
      - thumbnail_sizes
      - is_download_allowed
        
  Item:
    type: object
    properties:
      type:
        type: string
        description: Indicates if the item is an 'album' or a 'photo'
        enum: 
          - photo
          - album
      title:
        type: string
        description: Description of the item, or filename
      path:
        type: string
        description: Path of the item
        format: path
      children:
        type: array
        description: Children items (only present for type 'Album'). The type of the elements is also 'Item', recursively.
        items:
          #type: object
          $ref: '#/definitions/Item'
    required:
      - type
      - title
      - path
